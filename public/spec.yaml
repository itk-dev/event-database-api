openapi: 3.1.0
info:
  title: 'Event database API'
  description: ''
  version: 2.0.0
servers:
  -
    url: /
    description: ''
paths:
  /api/v2/events:
    get:
      operationId: api_events_get_collection
      tags:
        - Event
      responses:
        200:
          description: 'Event collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Event.EventRepresentationProvider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } }, example: { '@id': string, type: string, 'hydra:first': string, 'hydra:last': string, 'hydra:previous': string, 'hydra:next': string } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Event resources.'
      description: 'Retrieves the collection of Event resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 10
            minimum: 0
            maximum: 50
          style: form
          explode: false
          allowReserved: false
        -
          name: tags
          in: query
          description: 'Filter base on values given'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/api/v2/events/{id}':
    get:
      operationId: api_events_id_get
      tags:
        - Event
      responses:
        200:
          description: 'Single event'
      summary: 'Retrieves a Event resource.'
      description: 'Retrieves a Event resource.'
      parameters:
        -
          name: id
          in: path
          description: ''
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: integer
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /api/v2/organizations:
    get:
      operationId: api_organizations_get_collection
      tags:
        - Organization
      responses:
        200:
          description: 'Organization collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization.OrganizationRepresentationProvider.jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } }, example: { '@id': string, type: string, 'hydra:first': string, 'hydra:last': string, 'hydra:previous': string, 'hydra:next': string } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
      summary: 'Retrieves the collection of Organization resources.'
      description: 'Retrieves the collection of Organization resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 20
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
        -
          name: name
          in: query
          description: 'Search field based on value given'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/api/v2/organizations/{id}':
    get:
      operationId: api_organizations_id_get
      tags:
        - Organization
      responses:
        200:
          description: 'Single organization'
      summary: 'Get single organization base on identifier'
      description: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          description: ''
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: integer
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
components:
  schemas:
    Event.EventRepresentationProvider.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
    Organization.OrganizationRepresentationProvider.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes: {  }
security: []
tags: []
